{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/form/form.js","components/results/results.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","Form","props","clickHandler","e","a","preventDefault","document","getElementById","value","setState","url","results","fetch","state","method","then","raw","json","data","resultHandler","methodHandler","target","onSubmit","this","data-testid","onClick","type","id","autoComplete","className","React","Component","Results","prettyJson","Headers","headers","Response","count","resArr","src","theme","enableClipboard","App","res","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.afe19acd.chunk.js","sourcesContent":["import './header.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>\n        RESTy\n      </h1>\n    </header>\n  )\n}\n\nexport default Header;","import './footer.scss';\n\nconst Footer =()=>{\n  return (\n    <footer>\n      <p>\n        &copy; Dina AlSaid,2020\n      </p>\n    </footer>\n  )\n\n}\n\nexport default Footer;","import React from 'react';\nimport './form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: ' ',\n      method: 'GET',\n    };\n  }\n  clickHandler = async (e) => {\n    e.preventDefault();\n    if(document.getElementById('url').value !== ''){\n      await this.setState({ url: document.getElementById('url').value });\n    }else{\n      await this.setState({results : ['no url defined']})\n    }\n    fetch(this.state.url,{method:this.state.method})\n    .then(raw => raw.json())\n    .then((data) => {\n      this.props.resultHandler(data);\n    });\n    document.getElementById('url').value = '';\n  }\n  methodHandler = async (e) => {\n    e.preventDefault();\n    await this.setState({ method: e.target.value });\n\n  }\n  render() {\n    return (\n      <>\n        <form onSubmit={this.clickHandler} data-testid='submitForm'>\n          <div>\n            <button value='GET' onClick={this.methodHandler}>GET</button>\n            <button value='POST' onClick={this.methodHandler}>POST</button>\n            <button value='PUT' onClick={this.methodHandler}>PUT</button>\n            <button value='DELETE' onClick={this.methodHandler}>DELETE</button>\n          </div>\n          <div>\n            <input type='text' id='url' autoComplete='false'  data-testid='inputField'/>\n            <input type='submit' value='GO'  data-testid='submitBtn'/>\n\n          </div>\n        </form>\n        <div className='output' >\n          <div>{this.state.method}</div>\n          <div data-testid='output'>{this.state.url}</div>\n           \n        </div>\n\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component {\n  prettyJson = () => {\n    let retObj = {\n      Headers : this.props.headers,\n      Response: {\n        count: this.props.count,\n        results: this.props.resArr, \n      }\n\n    }\n\n    return retObj;\n  }\n  render() {\n    return (\n      <div >\n        <ReactJson src={this.prettyJson()} theme='ashes' enableClipboard='false' />\n\n      </div>\n    );\n\n  }\n\n}\n\nexport default Results;\n","import React from 'react';\nimport './design/base.scss';\nimport Header from './components/header/header.js';\nimport Footer from './components/footer/footer.js';\nimport Form from './components/form/form.js';\nimport Results from './components/results/results.js';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      headers:'no headers',\n      count:'',\n      results:[],\n    }\n  }\n  resultHandler = async (res)=>{\n    // console.log('hello from ',this);.results,data.count\n    await this.setState({count:res.count, results:res.results, headers:res.headers});\n    console.log(this.state.results);\n  }\n  render() {\n    return (\n      <>\n        <Header />\n        <Form resultHandler={this.resultHandler}/>\n        <Results resArr ={this.state.results} count={this.state.count} headers={this.state.headers}/>\n        <Footer />\n      </>\n\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}