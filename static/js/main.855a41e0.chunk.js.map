{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/form/form.js","components/results/results.js","components/history/history.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Footer","Form","props","clickHandler","e","a","preventDefault","createBuffering","setState","url","document","getElementById","value","superagent","state","method","then","data","updateHistory","body","resultHandler","catch","remove","console","log","img","createElement","setAttribute","appendChild","storedQueries","JSON","parse","localStorage","getItem","query","previous","push","setItem","stringify","methodHandler","target","onSubmit","this","data-testid","onClick","type","id","autoComplete","className","React","Component","Results","prettyJson","Headers","headers","Response","count","results","resArr","isReady","condition","src","theme","enableClipboard","History","showHistoryList","json","historyList","App","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.855a41e0.chunk.js","sourcesContent":["import './header.scss';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>\n        RESTy\n      </h1>\n    </header>\n  )\n}\n\nexport default Header;","import './footer.scss';\n\nconst Footer =()=>{\n  return (\n    <footer>\n      <p>\n        &copy; Dina AlSaid,2020\n      </p>\n    </footer>\n  )\n\n}\n\nexport default Footer;","import React from 'react';\nimport superagent from 'superagent';\nimport './form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: ' ',\n      method: 'GET',\n      storedQueries:[],\n    };\n  }\n  clickHandler = async (e) => {\n    e.preventDefault();\n    this.createBuffering();\n\n    await this.setState({ url: document.getElementById('url').value });\n    superagent(`${this.state.method}`,`${this.state.url}`)\n    .then((data) => {\n      this.updateHistory(data.body);\n      this.props.resultHandler(data);\n\n    }).catch(e=>{\n      if(document.getElementById('bufferImg')){\n        document.getElementById('bufferImg').remove();\n      }\n      // this.props.resultHandler(e);\n      console.log(e)})\n    \n    document.getElementById('url').value = '';\n  }\n  createBuffering = ()=>{\n    let img = document.createElement('img');\n    img.setAttribute('src','https://img.wattpad.com/66c61e194d72f389ca320552cd97df4c70f30440/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f776174747061642d6d656469612d736572766963652f53746f7279496d6167652f624374335030343862465f7a7a673d3d2d3435373737313536382e313464663063336566333937653239663630343833383931363935352e676966');\n    img.setAttribute('alt','buffering');\n    img.setAttribute('width','20px');\n    img.setAttribute('id','bufferImg');\n    document.getElementById('loading').appendChild(img);\n  }\n  updateHistory = async (body)=>{\n    await this.setState({storedQueries: JSON.parse(localStorage.getItem('history'))});\n    let query = {}\n    query.url=this.state.url;\n    query.method=this.state.method;\n    query.body=body;\n    console.log(this.state.storedQueries);\n    let previous = this.state.storedQueries? this.state.storedQueries: [];\n    previous.push(query);\n    await this.setState({storedQueries: previous});\n    localStorage.setItem('history',JSON.stringify(this.state.storedQueries));\n  }\n  methodHandler = async (e) => {\n    e.preventDefault();\n    await this.setState({ method: e.target.value });\n\n  }\n  render() {\n    return (\n      <>\n        <form onSubmit={this.clickHandler} data-testid='submitForm'>\n          <div>\n            <button value='GET' onClick={this.methodHandler}>GET</button>\n            <button value='POST' onClick={this.methodHandler}>POST</button>\n            <button value='PUT' onClick={this.methodHandler}>PUT</button>\n            <button value='DELETE' onClick={this.methodHandler}>DELETE</button>\n          </div>\n          <div>\n            <input type='text' id='url' autoComplete='false' data-testid='inputField' />\n            <input type='submit' value='GO' data-testid='submitBtn' />\n\n          </div>\n        </form>\n        <div className='output' >\n          <div>{this.state.method}</div>\n          <div data-testid='output'>{this.state.url}</div>\n        </div>\n        <div id='loading'></div>\n\n      </>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport { If, Then, Else } from 'react-if';\n\nclass Results extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      isReady:false,\n    }\n  }\n  prettyJson = () => {\n    let retObj = {\n      Headers : this.props.headers,\n      Response: {\n        count: this.props.count,\n        results: this.props.resArr, \n      }\n\n    }\n\n    return retObj;\n  }\n  componentDidUpdate(){\n    document.getElementById('bufferImg').remove();\n  }\n  render() {\n    return (\n      <div id='results'>\n        <If condition={this.props.resArr !== [] && this.props.headers !=='' && this.props.count!==''}>\n          <Then>\n          <ReactJson src={this.prettyJson()} theme='ashes' enableClipboard='false' />\n          </Then>\n          <Else>\n            <div>No results</div>\n          </Else>\n        </If>\n\n      </div>\n    );\n\n  }\n\n}\n\nexport default Results;\n","import React from 'react';\n\nclass History extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      historyList:[],\n    }\n  }\n  showHistoryList = ()=>{\n    let json = JSON.parse(localStorage.getItem('history'));\n    console.log(json);\n    // let history = json.map((item)=>{return item})\n    this.setState({historyList:json});\n  }\n  render(){\n    return(\n      <div>\n        hahahahahahahahaha\n      </div>\n    );\n  }\n}\n\nexport default History;\n\n","import React from 'react';\nimport './design/base.scss';\nimport Header from './components/header/header.js';\nimport Footer from './components/footer/footer.js';\nimport Form from './components/form/form.js';\nimport Results from './components/results/results.js';\nimport History from './components/history/history.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      headers: '',\n      count: '',\n      results: [],\n    }\n  }\n  resultHandler =  (res) => {\n    if (res.body) {\n       this.setState({\n        count: res.body.count,\n        results: res.body.results,\n        headers: res.headers\n      });\n    } else {\n       this.setState({\n        count: '',\n        results: [],\n        headers: '',\n      });\n\n    }\n  }\n  \n  render() {\n    return (\n      <>\n        <Header />\n        <Form resultHandler={this.resultHandler} />\n        <Results resArr={this.state.results}\n          count={this.state.count}\n          headers={this.state.headers}/>\n        <History />\n        <Footer />\n      </>\n\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}